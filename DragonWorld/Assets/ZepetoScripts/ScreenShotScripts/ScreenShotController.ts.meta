fileFormatVersion: 2
guid: 4ad7232826783c34082a0b7c2afabfba
importerOverride: ZEPETO.Script.Compiler:ZEPETO.Script:TypescriptAssetImporter
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: -1123457745, guid: 54cf806323ffe4418a4ce4cc63fe6b9d, type: 3}
  isAssemblyDeclarations: 0
  assembly: 
  generateAllTypes: 1
  types: []
  generateWrapper: 0
  overrideWrapperTypes: 0
  wrapperTypes: []
  WrapperFilters: []
  wrapperOutputDirectory: Generated
  compiledResult: '{"source":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\",
    { value: true });\r\nconst UnityEngine_1 = require(\"UnityEngine\");\r\nconst
    UnityEngine_UI_1 = require(\"UnityEngine.UI\");\r\nconst ZEPETO_Script_1 = require(\"ZEPETO.Script\");\r\nconst
    ZEPETO_World_1 = require(\"ZEPETO.World\");\r\nconst UIController_1 = require(\"./UIController\");\r\nclass
    ScreenShotController extends ZEPETO_Script_1.ZepetoScriptBehaviour {\r\n    constructor()
    {\r\n        super(...arguments);\r\n        this.cnt = 0;\r\n    }\r\n    Awake()
    {\r\n        this.uiController = this.uiControllerObject.GetComponent($typeof(UIController_1.default));\r\n       
    // this.renderTexture2ds = new Array();\r\n        this.scrBlendResultTexture
    = new UnityEngine_1.RenderTexture(1920, 1080, 16);\r\n        this.scrBlendCam
    = this.screenshotBlendModule.GetComponentInChildren($typeof(UnityEngine_1.Camera));\r\n       
    // this.scrBlendRenderTextures = new Array();\r\n    }\r\n    // Set the camera
    used to take a screenshot. \r\n    SetScreenShotCamera(camera) {\r\n        this.camera
    = camera;\r\n    }\r\n    // Onclick Function - Take Screenshot Button\r\n   
    TakeScreenShot(isBackgroundOn) {\r\n        if (isBackgroundOn) {\r\n           
    this.TakeScreenShotWithBackground();\r\n        }\r\n        else {\r\n           
    this.TakeScreenShotWithoutBackground();\r\n        }\r\n    }\r\n    TakeDoubleScreenShot()
    {\r\n        // let rt_temp = new RenderTexture(this.renderTexture.width,this.renderTexture.height,
    16);\r\n        UnityEngine_1.Graphics.Blit(this.renderTexture, this.scrBlendRenderTextures[this.cnt]);\r\n       
    //  = rt_temp;\r\n        // console.log(this.cnt);\r\n        return this.scrBlendRenderTextures[this.cnt++];\r\n       
    // let t2d = new Texture2D(this.renderTexture.width/this.downsizeRate,this.renderTexture.height/this.downsizeRate);\r\n       
    // let rt_downsize = new RenderTexture(this.renderTexture.width/this.downsizeRate,this.renderTexture.height/this.downsizeRate,
    16);\r\n        // Graphics.Blit(this.renderTexture, rt_downsize);\r\n       
    // RenderTexture.active = rt_downsize;\r\n        // t2d.ReadPixels(new Rect(0,
    0, rt_downsize.width, rt_downsize.height), 0, 0);\r\n        // t2d.Apply();\r\n       
    // this.renderTexture2ds.push(t2d);\r\n        // return this.renderTexture2ds[this.renderTexture2ds.length-1];\r\n   
    }\r\n    CombineTexture() {\r\n        // console.log(\"CombineTexture in\");\r\n       
    // let width = 1920;\r\n        // let height = 1080;\r\n        // console.log(\"CombineTexture
    in rendertexture create\");\r\n        // let resultTex2d = new Texture2D(width*2,
    height*2);\r\n        // for (let i = 0; i < this.renderTexture2ds.length; i++)\r\n       
    // {\r\n        //     let x = (i % 2) * width; // 0 1 0 1\r\n        //    
    let y = Math.floor((this.renderTexture2ds.length - i - 1) / 2) * height; // 0
    0 1 1\r\n        //     let pixels = this.renderTexture2ds[i].GetPixels();\r\n       
    //     resultTex2d.SetPixels(x, y, width, height, pixels);\r\n        // }\r\n       
    // resultTex2d.Apply();\r\n        // Graphics.Blit(resultTex2d, this.scrBlendTexture);\r\n       
    this.scrBlendCam.targetTexture = this.renderTexture;\r\n        this.scrBlendCam.Render();\r\n       
    this.scrBlendCam.targetTexture = null;\r\n        for (let i = 0; i < this.scrBlendRenderTextures.length;
    i++) {\r\n            this.scrBlendRenderTextures[i] = null;\r\n        }\r\n       
    // RenderTexture.active = this.renderTexture;\r\n        // let resultTex2d2
    = new Texture2D(this.frame.textureRect.width,this.frame.textureRect.height);\r\n       
    // resultTex2d2.ReadPixels(new Rect(0, 0, this.renderTexture.width, this.renderTexture.height),
    0, 0);\r\n        // let pxs = this.frame.texture.GetPixels(Math.floor(this.frame.textureRect.x),Math.floor(this.frame.textureRect.y),Math.floor(this.frame.textureRect.width),Math.floor(this.frame.textureRect.height));\r\n       
    // resultTex2d2.SetPixels(0,0,this.frame.textureRect.width,this.frame.textureRect.height,
    pxs);\r\n        // resultTex2d2.Apply();\r\n        // Graphics.Blit(resultTex2d2,
    this.renderTexture);\r\n        // console.log(\"CombineTexture end\");\r\n       
    // this.renderTexture2ds = new Array();\r\n    }\r\n    // onClick function -
    Save button on screenshot result screen\r\n    SaveScreenShot() {\r\n       
    //Save Screenshot\r\n        ZEPETO_World_1.ZepetoWorldContent.SaveToCameraRoll(this.renderTexture,
    (result) => { console.log(`${result}`); });\r\n    }\r\n    // onClick function
    - Share button on screenshot result screen\r\n    ShareScreenShot() {\r\n       
    ZEPETO_World_1.ZepetoWorldContent.Share(this.renderTexture, (result) => { console.log(`${result}`);
    });\r\n    }\r\n    // onClick function - Create feed button on screenshot result
    screen\r\n    CreateFeedScreenShot() {\r\n        ZEPETO_World_1.ZepetoWorldContent.CreateFeed(this.renderTexture,
    this.feedMessage, (result) => {\r\n            this.uiController.ShowCreateFeedResult(result);\r\n       
    });\r\n    }\r\n    *RenderTargetTextureWithBackground() {\r\n        yield new
    UnityEngine_1.WaitForEndOfFrame();\r\n        this.camera.Render();\r\n       
    this.camera.targetTexture = null;\r\n    }\r\n    *RenderTargetTextureWithoutBackground()
    {\r\n        yield new UnityEngine_1.WaitForEndOfFrame();\r\n        this.camera.Render();\r\n       
    // 4. Revert existing settings \r\n        this.camera.targetTexture = null;\r\n       
    this.camera.backgroundColor = this.preBackgroundColor;\r\n        this.camera.clearFlags
    = this.preClearFlags;\r\n        // 5. Reactivate the background canvas while
    taking a screenshot\r\n        this.backgroundCanvas.gameObject.SetActive(true);\r\n   
    }\r\n    TakeScreenShotWithBackground() {\r\n        // Specify the target texture
    and render the camera\r\n        this.camera.targetTexture = this.renderTexture;\r\n       
    this.camera.Render();\r\n        this.camera.targetTexture = null;\r\n       
    // this.StartCoroutine(this.RenderTargetTextureWithBackground());\r\n    }\r\n   
    TakeScreenShotWithoutBackground() {\r\n        // Disable background canvas while
    taking screenshots\r\n        this.backgroundCanvas.gameObject.SetActive(false);\r\n       
    // 1. Specify the target texture and save the camera flag/color values before
    the screenshot\r\n        this.camera.targetTexture = this.renderTexture;\r\n       
    this.preClearFlags = this.camera.clearFlags;\r\n        this.preBackgroundColor
    = this.camera.backgroundColor;\r\n        // 2. Fill the background of the camera
    with a solid color and make the background color transparent. \r\n        this.camera.clearFlags
    = UnityEngine_1.CameraClearFlags.SolidColor;\r\n        this.camera.backgroundColor
    = new UnityEngine_1.Color(0, 0, 0, 0);\r\n        // 3. Camera Render\r\n       
    this.StartCoroutine(this.RenderTargetTextureWithoutBackground());\r\n    }\r\n}\r\nexports.default
    = ScreenShotController;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2NyZWVuU2hvdENvbnRyb2xsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJTY3JlZW5TaG90Q29udHJvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDZDQUF5SjtBQUN6SixtREFBMEM7QUFDMUMsaURBQXFEO0FBQ3JELCtDQUFrRDtBQUNsRCxpREFBMEM7QUFFMUMsTUFBcUIsb0JBQXFCLFNBQVEscUNBQXFCO0lBQXZFOztRQTRDWSxRQUFHLEdBQUcsQ0FBQyxDQUFDO0lBMEhwQixDQUFDO0lBL0lHLEtBQUs7UUFDRCxJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxZQUFZLFNBQUMsc0JBQVksRUFBRyxDQUFDO1FBQ3pFLHVDQUF1QztRQUN2QyxJQUFJLENBQUMscUJBQXFCLEdBQUcsSUFBSSwyQkFBYSxDQUFDLElBQUksRUFBQyxJQUFJLEVBQUMsRUFBRSxDQUFDLENBQUM7UUFDN0QsSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsc0JBQXNCLFNBQUMsb0JBQU0sRUFBRyxDQUFDO1FBQy9FLDZDQUE2QztJQUNqRCxDQUFDO0lBRUQsNkNBQTZDO0lBQ3RDLG1CQUFtQixDQUFDLE1BQWM7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7SUFDekIsQ0FBQztJQUVELDRDQUE0QztJQUNyQyxjQUFjLENBQUMsY0FBdUI7UUFDekMsSUFBSSxjQUFjLEVBQUU7WUFDaEIsSUFBSSxDQUFDLDRCQUE0QixFQUFFLENBQUM7U0FDdkM7YUFBTTtZQUNILElBQUksQ0FBQywrQkFBK0IsRUFBRSxDQUFDO1NBQzFDO0lBQ0wsQ0FBQztJQUVNLG9CQUFvQjtRQUN2QiwyRkFBMkY7UUFDM0Ysc0JBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDekUs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","assetPath":"Assets/ZepetoScripts/ScreenShotScripts/ScreenShotController.ts","manifest":{"properties":[{"assembly":"UnityEngine.CoreModule","name":"renderTexture","type":"UnityEngine.RenderTexture","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"screenshotBlendModule","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"scrBlendRenderTextures","type":"UnityEngine.RenderTexture[]","isArray":true,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"backgroundCanvas","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"UnityEngine.CoreModule","name":"uiControllerObject","type":"UnityEngine.GameObject","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]},{"assembly":"mscorlib","name":"feedMessage","type":"System.String","isArray":false,"initValue":[],"enumKeys":[],"enumValues":[],"attributes":[]}],"name":"ScreenShotController","description":""},"isCompiled":true}'
  typescriptHash: e9f660f61ebeae027afd115203aeb087
  onlyWriteTrigger: 0
